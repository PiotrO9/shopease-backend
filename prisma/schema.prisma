generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String         @id @default(uuid()) @db.Uuid
  email    String         @unique
  login    String
  name     String
  password String
  tokens   RefreshToken[]
}

model RefreshToken {
  id        String   @id @default(uuid()) @db.Uuid
  token     String   @unique
  userId    String   @db.Uuid
  createdAt DateTime @default(now())
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Product {
  id          String           @id @default(uuid()) @db.Uuid
  name        String
  description String?
  categoryId  String?          @db.Uuid
  brand       String?
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  variants    ProductVariant[]
  category    Category?        @relation(fields: [categoryId], references: [id])
}

model ProductVariant {
  id         String   @id @default(uuid()) @db.Uuid
  productId  String   @db.Uuid
  image      String? 
  variant    String?
  size       String?
  sku        String   @unique
  price      Float?
  inventory  Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Category {
  id       String         @id @default(uuid()) @db.Uuid
  name     String
  image    String?
  parentId String?        @db.Uuid
  parent   Category?   @relation("CategoryHierarchy", fields: [parentId], references: [id])
  children Category[]  @relation("CategoryHierarchy")
  products Product[]
}
